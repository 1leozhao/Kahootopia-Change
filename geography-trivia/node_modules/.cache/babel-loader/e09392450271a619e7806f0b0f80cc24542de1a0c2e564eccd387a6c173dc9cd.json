{"ast":null,"code":"var _jsxFileName = \"/Users/leozhao/ws/change++/geographygame/geography-trivia/src/components/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ThemeProvider, createTheme, styled } from '@mui/material/styles';\nimport { Button, Typography, Box, Container, CssBaseline } from '@mui/material';\nimport axios from 'axios';\nimport { startGame, getQuestion, submitAnswer } from '../api';\nimport Question from './Question';\nimport Result from './Result';\n\n// Import background music\n\n// Create audio objects for each sound\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst correctSound = new Audio('/sounds/correct.mp3');\nconst incorrectSound = new Audio('/sounds/incorrect.mp3');\nconst gameOverSound = new Audio('/sounds/game-over.mp3');\nconst backgroundMusicAudio = new Audio('/sounds/background-music.mp3');\nbackgroundMusicAudio.loop = true;\n\n// Define a custom theme using Material-UI\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#46178f' // Kahoot-like purple for primary elements\n    },\n    secondary: {\n      main: '#FFC300' // Soft yellow for buttons and highlights\n    },\n    success: {\n      main: '#43B929' // Green for correct answers\n    },\n    background: {\n      default: '#46178f',\n      // Background color for the app\n      paper: '#FFFFFF' // Background color for cards\n    }\n  },\n  typography: {\n    fontFamily: '\"Montserrat\", sans-serif',\n    allVariants: {\n      fontFamily: '\"Montserrat\", sans-serif'\n    },\n    h4: {\n      fontWeight: 700\n    },\n    h6: {\n      fontWeight: 600\n    },\n    button: {\n      fontWeight: 600\n    }\n  },\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: `\n        @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;700&display=swap');\n        body {\n          font-family: 'Montserrat', sans-serif;\n        }\n      `\n    }\n  }\n});\n\n// Styled container for the main content\nconst StyledContainer = styled(Container)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.shape.borderRadius,\n  padding: theme.spacing(3),\n  boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\n}));\n_c = StyledContainer;\nconst Game = () => {\n  _s();\n  const [gameStarted, setGameStarted] = useState(false);\n  const [questionData, setQuestionData] = useState(null);\n  const [result, setResult] = useState(null);\n  const [score, setScore] = useState(0);\n  const [totalRounds, setTotalRounds] = useState(5);\n  const [highScore, setHighScore] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const totalTime = 10; // Total time for each question\n\n  const playBackgroundMusic = useCallback(() => {\n    backgroundMusicAudio.play();\n  }, []);\n  const stopBackgroundMusic = useCallback(() => {\n    backgroundMusicAudio.pause();\n    backgroundMusicAudio.currentTime = 0;\n  }, []);\n  useEffect(() => {\n    const storedHighScore = localStorage.getItem('highScore');\n    if (storedHighScore) {\n      setHighScore(parseInt(storedHighScore, 10));\n    }\n    return () => {\n      stopBackgroundMusic(); // Cleanup function to stop music when component unmounts\n    };\n  }, [stopBackgroundMusic]);\n  useEffect(() => {\n    let timer;\n    if (gameStarted && questionData && !result) {\n      timer = setInterval(() => {\n        setTimeLeft(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(timer);\n            handleAnswer(''); // Submit empty answer when time's up\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [gameStarted, questionData, result]);\n  const playSound = useCallback(sound => {\n    sound.currentTime = 0;\n    sound.play();\n  }, []);\n  const handleStartGame = async () => {\n    try {\n      const {\n        totalRounds\n      } = await startGame();\n      setTotalRounds(totalRounds);\n      setGameStarted(true);\n      setScore(0);\n      playBackgroundMusic(); // Start the background music\n      fetchQuestion();\n    } catch (error) {\n      console.error('Error starting game:', error);\n    }\n  };\n  const fetchQuestion = async () => {\n    try {\n      const data = await getQuestion();\n      setQuestionData(data);\n      setResult(null);\n      setTimeLeft(totalTime);\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching question:', error);\n      if (axios.isAxiosError(error) && ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 400) {\n        console.warn('Game might be over or there was an issue fetching the next question.');\n        setResult({\n          isCorrect: false,\n          correctAnswer: '',\n          gameOver: true,\n          points: 0,\n          score: score,\n          totalScore: score\n        });\n      }\n    }\n  };\n  const calculatePoints = timeLeft => {\n    return Math.round(timeLeft / totalTime * 1000);\n  };\n  const handleAnswer = async answer => {\n    if (result !== null && result !== void 0 && result.gameOver) {\n      console.warn('Game is already over. Cannot submit more answers.');\n      return;\n    }\n    const points = calculatePoints(timeLeft);\n    try {\n      const response = await submitAnswer(answer);\n      let earnedPoints = 0;\n      if (response.isCorrect) {\n        earnedPoints = points;\n        setScore(prevScore => prevScore + points);\n        playSound(correctSound);\n      } else {\n        playSound(incorrectSound);\n      }\n      setResult({\n        ...response,\n        points: earnedPoints\n      });\n      if (response.gameOver) {\n        playSound(gameOverSound);\n        const finalScore = score + earnedPoints;\n        if (finalScore > highScore) {\n          setHighScore(finalScore);\n          localStorage.setItem('highScore', finalScore.toString());\n        }\n      } else {\n        setTimeout(fetchQuestion, 2000);\n      }\n    } catch (error) {\n      var _error$response2;\n      console.error('Error submitting answer:', error);\n      if (axios.isAxiosError(error) && ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 400) {\n        console.warn('Game might be over or there was an issue with the answer submission.');\n        setResult({\n          isCorrect: false,\n          correctAnswer: '',\n          gameOver: true,\n          points: 0,\n          score: score,\n          totalScore: score\n        });\n      }\n    }\n  };\n  const handlePlayAgain = () => {\n    setGameStarted(false);\n    setQuestionData(null);\n    setResult(null);\n    setScore(0);\n    stopBackgroundMusic(); // Stop the background music\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        minHeight: '100vh',\n        backgroundColor: 'primary.main',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundImage: 'url(\"/images/world-map-outline.svg\")',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: 'cover'\n      },\n      children: /*#__PURE__*/_jsxDEV(StyledContainer, {\n        maxWidth: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          align: \"center\",\n          color: \"primary\",\n          children: \"Geography Trivia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), !gameStarted ? /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: [\"High Score: \", highScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: handleStartGame,\n            size: \"large\",\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            align: \"center\",\n            children: [\"Score: \", score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), questionData && !result && /*#__PURE__*/_jsxDEV(Question, {\n            data: questionData,\n            onAnswer: handleAnswer,\n            timeLeft: timeLeft,\n            totalTime: totalTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this), result && /*#__PURE__*/_jsxDEV(Result, {\n            result: result,\n            score: score,\n            totalRounds: totalRounds,\n            highScore: highScore,\n            onPlayAgain: handlePlayAgain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"WT4ib8T0pC7QJD+46OU5p0gyyqI=\");\n_c2 = Game;\nexport default Game;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ThemeProvider","createTheme","styled","Button","Typography","Box","Container","CssBaseline","axios","startGame","getQuestion","submitAnswer","Question","Result","jsxDEV","_jsxDEV","Fragment","_Fragment","correctSound","Audio","incorrectSound","gameOverSound","backgroundMusicAudio","loop","theme","palette","primary","main","secondary","success","background","default","paper","typography","fontFamily","allVariants","h4","fontWeight","h6","button","components","MuiCssBaseline","styleOverrides","StyledContainer","backgroundColor","borderRadius","shape","padding","spacing","boxShadow","_c","Game","_s","gameStarted","setGameStarted","questionData","setQuestionData","result","setResult","score","setScore","totalRounds","setTotalRounds","highScore","setHighScore","timeLeft","setTimeLeft","totalTime","playBackgroundMusic","play","stopBackgroundMusic","pause","currentTime","storedHighScore","localStorage","getItem","parseInt","timer","setInterval","prevTime","clearInterval","handleAnswer","playSound","sound","handleStartGame","fetchQuestion","error","console","data","_error$response","isAxiosError","response","status","warn","isCorrect","correctAnswer","gameOver","points","totalScore","calculatePoints","Math","round","answer","earnedPoints","prevScore","finalScore","setItem","toString","setTimeout","_error$response2","handlePlayAgain","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","minHeight","display","alignItems","justifyContent","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","maxWidth","variant","gutterBottom","align","color","textAlign","onClick","size","onAnswer","onPlayAgain","_c2","$RefreshReg$"],"sources":["/Users/leozhao/ws/change++/geographygame/geography-trivia/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { ThemeProvider, createTheme, styled } from '@mui/material/styles';\nimport { Button, Typography, Box, Container, CssBaseline } from '@mui/material';\nimport axios from 'axios';\nimport { startGame, getQuestion, submitAnswer } from '../api';\nimport { QuestionData, AnswerResponse } from '../types';\nimport Question from './Question';\nimport Result from './Result';\n\n// Import background music\n\n\n// Create audio objects for each sound\nconst correctSound = new Audio('/sounds/correct.mp3');\nconst incorrectSound = new Audio('/sounds/incorrect.mp3');\nconst gameOverSound = new Audio('/sounds/game-over.mp3');\nconst backgroundMusicAudio = new Audio('/sounds/background-music.mp3');\nbackgroundMusicAudio.loop = true;\n\n// Define a custom theme using Material-UI\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#46178f', // Kahoot-like purple for primary elements\n    },\n    secondary: {\n      main: '#FFC300', // Soft yellow for buttons and highlights\n    },\n    success: {\n      main: '#43B929', // Green for correct answers\n    },\n    background: {\n      default: '#46178f', // Background color for the app\n      paper: '#FFFFFF', // Background color for cards\n    },\n  },\n  typography: {\n    fontFamily: '\"Montserrat\", sans-serif',\n    allVariants: {\n      fontFamily: '\"Montserrat\", sans-serif',\n    },\n    h4: {\n      fontWeight: 700,\n    },\n    h6: {\n      fontWeight: 600,\n    },\n    button: {\n      fontWeight: 600,\n    },\n  },\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: `\n        @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;700&display=swap');\n        body {\n          font-family: 'Montserrat', sans-serif;\n        }\n      `,\n    },\n  },\n});\n\n// Styled container for the main content\nconst StyledContainer = styled(Container)(({ theme }) => ({\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.shape.borderRadius,\n  padding: theme.spacing(3),\n  boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n}));\n\nconst Game: React.FC = () => {\n  const [gameStarted, setGameStarted] = useState(false);\n  const [questionData, setQuestionData] = useState<QuestionData | null>(null);\n  const [result, setResult] = useState<AnswerResponse | null>(null);\n  const [score, setScore] = useState(0);\n  const [totalRounds, setTotalRounds] = useState(5);\n  const [highScore, setHighScore] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const totalTime = 10; // Total time for each question\n\n  const playBackgroundMusic = useCallback(() => {\n    backgroundMusicAudio.play();\n  }, []);\n\n  const stopBackgroundMusic = useCallback(() => {\n    backgroundMusicAudio.pause();\n    backgroundMusicAudio.currentTime = 0;\n  }, []);\n\n  useEffect(() => {\n    const storedHighScore = localStorage.getItem('highScore');\n    if (storedHighScore) {\n      setHighScore(parseInt(storedHighScore, 10));\n    }\n\n    return () => {\n      stopBackgroundMusic(); // Cleanup function to stop music when component unmounts\n    };\n  }, [stopBackgroundMusic]);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n    if (gameStarted && questionData && !result) {\n      timer = setInterval(() => {\n        setTimeLeft((prevTime) => {\n          if (prevTime <= 1) {\n            clearInterval(timer);\n            handleAnswer(''); // Submit empty answer when time's up\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [gameStarted, questionData, result]);\n\n  const playSound = useCallback((sound: HTMLAudioElement) => {\n    sound.currentTime = 0;\n    sound.play();\n  }, []);\n\n  const handleStartGame = async () => {\n    try {\n      const { totalRounds } = await startGame();\n      setTotalRounds(totalRounds);\n      setGameStarted(true);\n      setScore(0);\n      playBackgroundMusic(); // Start the background music\n      fetchQuestion();\n    } catch (error) {\n      console.error('Error starting game:', error);\n    }\n  };\n\n  const fetchQuestion = async () => {\n    try {\n      const data = await getQuestion();\n      setQuestionData(data);\n      setResult(null);\n      setTimeLeft(totalTime);\n    } catch (error) {\n      console.error('Error fetching question:', error);\n      if (axios.isAxiosError(error) && error.response?.status === 400) {\n        console.warn('Game might be over or there was an issue fetching the next question.');\n        setResult({\n          isCorrect: false,\n          correctAnswer: '',\n          gameOver: true,\n          points: 0,\n          score: score,\n          totalScore: score,\n        });\n      }\n    }\n  };\n\n  const calculatePoints = (timeLeft: number): number => {\n    return Math.round((timeLeft / totalTime) * 1000);\n  };\n\n  const handleAnswer = async (answer: string) => {\n    if (result?.gameOver) {\n      console.warn('Game is already over. Cannot submit more answers.');\n      return;\n    }\n\n    const points = calculatePoints(timeLeft);\n    \n    try {\n      const response = await submitAnswer(answer);\n      \n      let earnedPoints = 0;\n      if (response.isCorrect) {\n        earnedPoints = points;\n        setScore((prevScore) => prevScore + points);\n        playSound(correctSound);\n      } else {\n        playSound(incorrectSound);\n      }\n      \n      setResult({ ...response, points: earnedPoints });\n\n      if (response.gameOver) {\n        playSound(gameOverSound);\n        const finalScore = score + earnedPoints;\n        if (finalScore > highScore) {\n          setHighScore(finalScore);\n          localStorage.setItem('highScore', finalScore.toString());\n        }\n      } else {\n        setTimeout(fetchQuestion, 2000);\n      }\n    } catch (error) {\n      console.error('Error submitting answer:', error);\n      if (axios.isAxiosError(error) && error.response?.status === 400) {\n        console.warn('Game might be over or there was an issue with the answer submission.');\n        setResult({\n          isCorrect: false,\n          correctAnswer: '',\n          gameOver: true,\n          points: 0,\n          score: score,\n          totalScore: score,\n        });\n      }\n    }\n  };\n\n  const handlePlayAgain = () => {\n    setGameStarted(false);\n    setQuestionData(null);\n    setResult(null);\n    setScore(0);\n    stopBackgroundMusic(); // Stop the background music\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box \n        sx={{ \n          minHeight: '100vh', \n          backgroundColor: 'primary.main',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundImage: 'url(\"/images/world-map-outline.svg\")',\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n        }}\n      >\n        <StyledContainer maxWidth=\"sm\">\n          <Typography variant=\"h4\" gutterBottom align=\"center\" color=\"primary\">\n            Geography Trivia\n          </Typography>\n          {!gameStarted ? (\n            <Box textAlign=\"center\">\n              <Typography variant=\"h6\" gutterBottom>\n                High Score: {highScore}\n              </Typography>\n              <Button \n                variant=\"contained\" \n                color=\"secondary\" \n                onClick={handleStartGame}\n                size=\"large\"\n              >\n                Start Game\n              </Button>\n            </Box>\n          ) : (\n            <>\n              <Typography variant=\"h6\" gutterBottom align=\"center\">\n                Score: {score}\n              </Typography>\n              {questionData && !result && (\n                <Question \n                  data={questionData} \n                  onAnswer={handleAnswer}\n                  timeLeft={timeLeft}\n                  totalTime={totalTime}\n                />\n              )}\n              {result && (\n                <Result\n                  result={result}\n                  score={score}\n                  totalRounds={totalRounds}\n                  highScore={highScore}\n                  onPlayAgain={handlePlayAgain}\n                />\n              )}\n            </>\n          )}\n        </StyledContainer>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default Game;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,aAAa,EAAEC,WAAW,EAAEC,MAAM,QAAQ,sBAAsB;AACzE,SAASC,MAAM,EAAEC,UAAU,EAAEC,GAAG,EAAEC,SAAS,EAAEC,WAAW,QAAQ,eAAe;AAC/E,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,WAAW,EAAEC,YAAY,QAAQ,QAAQ;AAE7D,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;;AAE7B;;AAGA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,YAAY,GAAG,IAAIC,KAAK,CAAC,qBAAqB,CAAC;AACrD,MAAMC,cAAc,GAAG,IAAID,KAAK,CAAC,uBAAuB,CAAC;AACzD,MAAME,aAAa,GAAG,IAAIF,KAAK,CAAC,uBAAuB,CAAC;AACxD,MAAMG,oBAAoB,GAAG,IAAIH,KAAK,CAAC,8BAA8B,CAAC;AACtEG,oBAAoB,CAACC,IAAI,GAAG,IAAI;;AAEhC;AACA,MAAMC,KAAK,GAAGvB,WAAW,CAAC;EACxBwB,OAAO,EAAE;IACPC,OAAO,EAAE;MACPC,IAAI,EAAE,SAAS,CAAE;IACnB,CAAC;IACDC,SAAS,EAAE;MACTD,IAAI,EAAE,SAAS,CAAE;IACnB,CAAC;IACDE,OAAO,EAAE;MACPF,IAAI,EAAE,SAAS,CAAE;IACnB,CAAC;IACDG,UAAU,EAAE;MACVC,OAAO,EAAE,SAAS;MAAE;MACpBC,KAAK,EAAE,SAAS,CAAE;IACpB;EACF,CAAC;EACDC,UAAU,EAAE;IACVC,UAAU,EAAE,0BAA0B;IACtCC,WAAW,EAAE;MACXD,UAAU,EAAE;IACd,CAAC;IACDE,EAAE,EAAE;MACFC,UAAU,EAAE;IACd,CAAC;IACDC,EAAE,EAAE;MACFD,UAAU,EAAE;IACd,CAAC;IACDE,MAAM,EAAE;MACNF,UAAU,EAAE;IACd;EACF,CAAC;EACDG,UAAU,EAAE;IACVC,cAAc,EAAE;MACdC,cAAc,EAAE;AACtB;AACA;AACA;AACA;AACA;IACI;EACF;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,eAAe,GAAGzC,MAAM,CAACI,SAAS,CAAC,CAAC,CAAC;EAAEkB;AAAM,CAAC,MAAM;EACxDoB,eAAe,EAAEpB,KAAK,CAACC,OAAO,CAACK,UAAU,CAACE,KAAK;EAC/Ca,YAAY,EAAErB,KAAK,CAACsB,KAAK,CAACD,YAAY;EACtCE,OAAO,EAAEvB,KAAK,CAACwB,OAAO,CAAC,CAAC,CAAC;EACzBC,SAAS,EAAE;AACb,CAAC,CAAC,CAAC;AAACC,EAAA,GALEP,eAAe;AAOrB,MAAMQ,IAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGzD,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC0D,YAAY,EAAEC,eAAe,CAAC,GAAG3D,QAAQ,CAAsB,IAAI,CAAC;EAC3E,MAAM,CAAC4D,MAAM,EAAEC,SAAS,CAAC,GAAG7D,QAAQ,CAAwB,IAAI,CAAC;EACjE,MAAM,CAAC8D,KAAK,EAAEC,QAAQ,CAAC,GAAG/D,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACgE,WAAW,EAAEC,cAAc,CAAC,GAAGjE,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACkE,SAAS,EAAEC,YAAY,CAAC,GAAGnE,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACoE,QAAQ,EAAEC,WAAW,CAAC,GAAGrE,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMsE,SAAS,GAAG,EAAE,CAAC,CAAC;;EAEtB,MAAMC,mBAAmB,GAAGrE,WAAW,CAAC,MAAM;IAC5CuB,oBAAoB,CAAC+C,IAAI,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,mBAAmB,GAAGvE,WAAW,CAAC,MAAM;IAC5CuB,oBAAoB,CAACiD,KAAK,CAAC,CAAC;IAC5BjD,oBAAoB,CAACkD,WAAW,GAAG,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN1E,SAAS,CAAC,MAAM;IACd,MAAM2E,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACzD,IAAIF,eAAe,EAAE;MACnBT,YAAY,CAACY,QAAQ,CAACH,eAAe,EAAE,EAAE,CAAC,CAAC;IAC7C;IAEA,OAAO,MAAM;MACXH,mBAAmB,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAACA,mBAAmB,CAAC,CAAC;EAEzBxE,SAAS,CAAC,MAAM;IACd,IAAI+E,KAAqB;IACzB,IAAIxB,WAAW,IAAIE,YAAY,IAAI,CAACE,MAAM,EAAE;MAC1CoB,KAAK,GAAGC,WAAW,CAAC,MAAM;QACxBZ,WAAW,CAAEa,QAAQ,IAAK;UACxB,IAAIA,QAAQ,IAAI,CAAC,EAAE;YACjBC,aAAa,CAACH,KAAK,CAAC;YACpBI,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;YAClB,OAAO,CAAC;UACV;UACA,OAAOF,QAAQ,GAAG,CAAC;QACrB,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;IACV;IACA,OAAO,MAAMC,aAAa,CAACH,KAAK,CAAC;EACnC,CAAC,EAAE,CAACxB,WAAW,EAAEE,YAAY,EAAEE,MAAM,CAAC,CAAC;EAEvC,MAAMyB,SAAS,GAAGnF,WAAW,CAAEoF,KAAuB,IAAK;IACzDA,KAAK,CAACX,WAAW,GAAG,CAAC;IACrBW,KAAK,CAACd,IAAI,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAM;QAAEvB;MAAY,CAAC,GAAG,MAAMpD,SAAS,CAAC,CAAC;MACzCqD,cAAc,CAACD,WAAW,CAAC;MAC3BP,cAAc,CAAC,IAAI,CAAC;MACpBM,QAAQ,CAAC,CAAC,CAAC;MACXQ,mBAAmB,CAAC,CAAC,CAAC,CAAC;MACvBiB,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMD,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMG,IAAI,GAAG,MAAM9E,WAAW,CAAC,CAAC;MAChC8C,eAAe,CAACgC,IAAI,CAAC;MACrB9B,SAAS,CAAC,IAAI,CAAC;MACfQ,WAAW,CAACC,SAAS,CAAC;IACxB,CAAC,CAAC,OAAOmB,KAAK,EAAE;MAAA,IAAAG,eAAA;MACdF,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,IAAI9E,KAAK,CAACkF,YAAY,CAACJ,KAAK,CAAC,IAAI,EAAAG,eAAA,GAAAH,KAAK,CAACK,QAAQ,cAAAF,eAAA,uBAAdA,eAAA,CAAgBG,MAAM,MAAK,GAAG,EAAE;QAC/DL,OAAO,CAACM,IAAI,CAAC,sEAAsE,CAAC;QACpFnC,SAAS,CAAC;UACRoC,SAAS,EAAE,KAAK;UAChBC,aAAa,EAAE,EAAE;UACjBC,QAAQ,EAAE,IAAI;UACdC,MAAM,EAAE,CAAC;UACTtC,KAAK,EAAEA,KAAK;UACZuC,UAAU,EAAEvC;QACd,CAAC,CAAC;MACJ;IACF;EACF,CAAC;EAED,MAAMwC,eAAe,GAAIlC,QAAgB,IAAa;IACpD,OAAOmC,IAAI,CAACC,KAAK,CAAEpC,QAAQ,GAAGE,SAAS,GAAI,IAAI,CAAC;EAClD,CAAC;EAED,MAAMc,YAAY,GAAG,MAAOqB,MAAc,IAAK;IAC7C,IAAI7C,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEuC,QAAQ,EAAE;MACpBT,OAAO,CAACM,IAAI,CAAC,mDAAmD,CAAC;MACjE;IACF;IAEA,MAAMI,MAAM,GAAGE,eAAe,CAAClC,QAAQ,CAAC;IAExC,IAAI;MACF,MAAM0B,QAAQ,GAAG,MAAMhF,YAAY,CAAC2F,MAAM,CAAC;MAE3C,IAAIC,YAAY,GAAG,CAAC;MACpB,IAAIZ,QAAQ,CAACG,SAAS,EAAE;QACtBS,YAAY,GAAGN,MAAM;QACrBrC,QAAQ,CAAE4C,SAAS,IAAKA,SAAS,GAAGP,MAAM,CAAC;QAC3Cf,SAAS,CAAChE,YAAY,CAAC;MACzB,CAAC,MAAM;QACLgE,SAAS,CAAC9D,cAAc,CAAC;MAC3B;MAEAsC,SAAS,CAAC;QAAE,GAAGiC,QAAQ;QAAEM,MAAM,EAAEM;MAAa,CAAC,CAAC;MAEhD,IAAIZ,QAAQ,CAACK,QAAQ,EAAE;QACrBd,SAAS,CAAC7D,aAAa,CAAC;QACxB,MAAMoF,UAAU,GAAG9C,KAAK,GAAG4C,YAAY;QACvC,IAAIE,UAAU,GAAG1C,SAAS,EAAE;UAC1BC,YAAY,CAACyC,UAAU,CAAC;UACxB/B,YAAY,CAACgC,OAAO,CAAC,WAAW,EAAED,UAAU,CAACE,QAAQ,CAAC,CAAC,CAAC;QAC1D;MACF,CAAC,MAAM;QACLC,UAAU,CAACvB,aAAa,EAAE,IAAI,CAAC;MACjC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAuB,gBAAA;MACdtB,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,IAAI9E,KAAK,CAACkF,YAAY,CAACJ,KAAK,CAAC,IAAI,EAAAuB,gBAAA,GAAAvB,KAAK,CAACK,QAAQ,cAAAkB,gBAAA,uBAAdA,gBAAA,CAAgBjB,MAAM,MAAK,GAAG,EAAE;QAC/DL,OAAO,CAACM,IAAI,CAAC,sEAAsE,CAAC;QACpFnC,SAAS,CAAC;UACRoC,SAAS,EAAE,KAAK;UAChBC,aAAa,EAAE,EAAE;UACjBC,QAAQ,EAAE,IAAI;UACdC,MAAM,EAAE,CAAC;UACTtC,KAAK,EAAEA,KAAK;UACZuC,UAAU,EAAEvC;QACd,CAAC,CAAC;MACJ;IACF;EACF,CAAC;EAED,MAAMmD,eAAe,GAAGA,CAAA,KAAM;IAC5BxD,cAAc,CAAC,KAAK,CAAC;IACrBE,eAAe,CAAC,IAAI,CAAC;IACrBE,SAAS,CAAC,IAAI,CAAC;IACfE,QAAQ,CAAC,CAAC,CAAC;IACXU,mBAAmB,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,oBACEvD,OAAA,CAACf,aAAa;IAACwB,KAAK,EAAEA,KAAM;IAAAuF,QAAA,gBAC1BhG,OAAA,CAACR,WAAW;MAAAyG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACfpG,OAAA,CAACV,GAAG;MACF+G,EAAE,EAAE;QACFC,SAAS,EAAE,OAAO;QAClBzE,eAAe,EAAE,cAAc;QAC/B0E,OAAO,EAAE,MAAM;QACfC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE,QAAQ;QACxBC,eAAe,EAAE,sCAAsC;QACvDC,gBAAgB,EAAE,WAAW;QAC7BC,kBAAkB,EAAE,QAAQ;QAC5BC,cAAc,EAAE;MAClB,CAAE;MAAAb,QAAA,eAEFhG,OAAA,CAAC4B,eAAe;QAACkF,QAAQ,EAAC,IAAI;QAAAd,QAAA,gBAC5BhG,OAAA,CAACX,UAAU;UAAC0H,OAAO,EAAC,IAAI;UAACC,YAAY;UAACC,KAAK,EAAC,QAAQ;UAACC,KAAK,EAAC,SAAS;UAAAlB,QAAA,EAAC;QAErE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,EACZ,CAAC9D,WAAW,gBACXtC,OAAA,CAACV,GAAG;UAAC6H,SAAS,EAAC,QAAQ;UAAAnB,QAAA,gBACrBhG,OAAA,CAACX,UAAU;YAAC0H,OAAO,EAAC,IAAI;YAACC,YAAY;YAAAhB,QAAA,GAAC,cACxB,EAAChD,SAAS;UAAA;YAAAiD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,eACbpG,OAAA,CAACZ,MAAM;YACL2H,OAAO,EAAC,WAAW;YACnBG,KAAK,EAAC,WAAW;YACjBE,OAAO,EAAE/C,eAAgB;YACzBgD,IAAI,EAAC,OAAO;YAAArB,QAAA,EACb;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,gBAENpG,OAAA,CAAAE,SAAA;UAAA8F,QAAA,gBACEhG,OAAA,CAACX,UAAU;YAAC0H,OAAO,EAAC,IAAI;YAACC,YAAY;YAACC,KAAK,EAAC,QAAQ;YAAAjB,QAAA,GAAC,SAC5C,EAACpD,KAAK;UAAA;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EACZ5D,YAAY,IAAI,CAACE,MAAM,iBACtB1C,OAAA,CAACH,QAAQ;YACP4E,IAAI,EAAEjC,YAAa;YACnB8E,QAAQ,EAAEpD,YAAa;YACvBhB,QAAQ,EAAEA,QAAS;YACnBE,SAAS,EAAEA;UAAU;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CACF,EACA1D,MAAM,iBACL1C,OAAA,CAACF,MAAM;YACL4C,MAAM,EAAEA,MAAO;YACfE,KAAK,EAAEA,KAAM;YACbE,WAAW,EAAEA,WAAY;YACzBE,SAAS,EAAEA,SAAU;YACrBuE,WAAW,EAAExB;UAAgB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CACF;QAAA,eACD,CACH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACc;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEpB,CAAC;AAAC/D,EAAA,CAjNID,IAAc;AAAAoF,GAAA,GAAdpF,IAAc;AAmNpB,eAAeA,IAAI;AAAC,IAAAD,EAAA,EAAAqF,GAAA;AAAAC,YAAA,CAAAtF,EAAA;AAAAsF,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}