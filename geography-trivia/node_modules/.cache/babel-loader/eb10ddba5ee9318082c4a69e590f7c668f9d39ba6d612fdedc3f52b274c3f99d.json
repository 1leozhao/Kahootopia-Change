{"ast":null,"code":"var _jsxFileName = \"/Users/leozhao/ws/change++/geographygame/geography-trivia/src/components/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Button, Typography, Box, Container } from '@mui/material';\nimport { startGame, getQuestion, submitAnswer } from '../api';\nimport Question from './Question';\nimport Result from './Result';\n\n// Create audio objects for each sound\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst correctSound = new Audio('/sounds/correct.mp3');\nconst incorrectSound = new Audio('/sounds/incorrect.mp3');\nconst gameOverSound = new Audio('/sounds/game-over.mp3');\nconst Game = () => {\n  _s();\n  const [gameStarted, setGameStarted] = useState(false);\n  const [questionData, setQuestionData] = useState(null);\n  const [result, setResult] = useState(null);\n  const [score, setScore] = useState(0);\n  const [totalRounds, setTotalRounds] = useState(5);\n  const [highScore, setHighScore] = useState(0);\n  useEffect(() => {\n    const storedHighScore = localStorage.getItem('highScore');\n    if (storedHighScore) {\n      setHighScore(parseInt(storedHighScore, 10));\n    }\n  }, []);\n  const playSound = useCallback(sound => {\n    sound.currentTime = 0; // Reset the audio to the beginning\n    sound.play();\n  }, []);\n  const handleStartGame = async () => {\n    const {\n      totalRounds\n    } = await startGame();\n    setTotalRounds(totalRounds);\n    setGameStarted(true);\n    setScore(0);\n    fetchQuestion();\n  };\n  const fetchQuestion = async () => {\n    const data = await getQuestion();\n    setQuestionData(data);\n    setResult(null);\n  };\n  const handleAnswer = async answer => {\n    const response = await submitAnswer(answer);\n    setResult(response);\n    setScore(response.score);\n    if (response.isCorrect) {\n      playSound(correctSound);\n    } else {\n      playSound(incorrectSound);\n    }\n    if (response.gameOver) {\n      playSound(gameOverSound);\n      if (response.score > highScore) {\n        setHighScore(response.score);\n        localStorage.setItem('highScore', response.score.toString());\n      }\n    } else {\n      setTimeout(fetchQuestion, 2000);\n    }\n  };\n  const handlePlayAgain = () => {\n    setGameStarted(false);\n    setQuestionData(null);\n    setResult(null);\n  };\n  if (!gameStarted) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        mt: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Geography Trivia Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"High Score: \", highScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleStartGame,\n          children: \"Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Geography Trivia Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: [\"Score: \", score, \" / \", totalRounds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), questionData && !result && /*#__PURE__*/_jsxDEV(Question, {\n        data: questionData,\n        onAnswer: handleAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), result && /*#__PURE__*/_jsxDEV(Result, {\n        result: result,\n        score: score,\n        totalRounds: totalRounds,\n        highScore: highScore,\n        onPlayAgain: handlePlayAgain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"wBm/SRJY0NkVErq5bCgEbmjXAp4=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Button","Typography","Box","Container","startGame","getQuestion","submitAnswer","Question","Result","jsxDEV","_jsxDEV","correctSound","Audio","incorrectSound","gameOverSound","Game","_s","gameStarted","setGameStarted","questionData","setQuestionData","result","setResult","score","setScore","totalRounds","setTotalRounds","highScore","setHighScore","storedHighScore","localStorage","getItem","parseInt","playSound","sound","currentTime","play","handleStartGame","fetchQuestion","data","handleAnswer","answer","response","isCorrect","gameOver","setItem","toString","setTimeout","handlePlayAgain","maxWidth","children","textAlign","mt","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","onAnswer","onPlayAgain","_c","$RefreshReg$"],"sources":["/Users/leozhao/ws/change++/geographygame/geography-trivia/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Button, Typography, Box, Container } from '@mui/material';\nimport { startGame, getQuestion, submitAnswer } from '../api';\nimport { QuestionData, AnswerResponse } from '../types';\nimport Question from './Question';\nimport Result from './Result';\n\n// Create audio objects for each sound\nconst correctSound = new Audio('/sounds/correct.mp3');\nconst incorrectSound = new Audio('/sounds/incorrect.mp3');\nconst gameOverSound = new Audio('/sounds/game-over.mp3');\n\nconst Game: React.FC = () => {\n  const [gameStarted, setGameStarted] = useState(false);\n  const [questionData, setQuestionData] = useState<QuestionData | null>(null);\n  const [result, setResult] = useState<AnswerResponse | null>(null);\n  const [score, setScore] = useState(0);\n  const [totalRounds, setTotalRounds] = useState(5);\n  const [highScore, setHighScore] = useState(0);\n\n  useEffect(() => {\n    const storedHighScore = localStorage.getItem('highScore');\n    if (storedHighScore) {\n      setHighScore(parseInt(storedHighScore, 10));\n    }\n  }, []);\n\n  const playSound = useCallback((sound: HTMLAudioElement) => {\n    sound.currentTime = 0; // Reset the audio to the beginning\n    sound.play();\n  }, []);\n\n  const handleStartGame = async () => {\n    const { totalRounds } = await startGame();\n    setTotalRounds(totalRounds);\n    setGameStarted(true);\n    setScore(0);\n    fetchQuestion();\n  };\n\n  const fetchQuestion = async () => {\n    const data = await getQuestion();\n    setQuestionData(data);\n    setResult(null);\n  };\n\n  const handleAnswer = async (answer: string) => {\n    const response = await submitAnswer(answer);\n    setResult(response);\n    setScore(response.score);\n\n    if (response.isCorrect) {\n      playSound(correctSound);\n    } else {\n      playSound(incorrectSound);\n    }\n\n    if (response.gameOver) {\n      playSound(gameOverSound);\n      if (response.score > highScore) {\n        setHighScore(response.score);\n        localStorage.setItem('highScore', response.score.toString());\n      }\n    } else {\n      setTimeout(fetchQuestion, 2000);\n    }\n  };\n\n  const handlePlayAgain = () => {\n    setGameStarted(false);\n    setQuestionData(null);\n    setResult(null);\n  };\n\n  if (!gameStarted) {\n    return (\n      <Container maxWidth=\"sm\">\n        <Box textAlign=\"center\" mt={4}>\n          <Typography variant=\"h4\" gutterBottom>\n            Geography Trivia Game\n          </Typography>\n          <Typography variant=\"h6\" gutterBottom>\n            High Score: {highScore}\n          </Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleStartGame}>\n            Start Game\n          </Button>\n        </Box>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box textAlign=\"center\" mt={4}>\n        <Typography variant=\"h4\" gutterBottom>\n          Geography Trivia Game\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom>\n          Score: {score} / {totalRounds}\n        </Typography>\n        {questionData && !result && (\n          <Question data={questionData} onAnswer={handleAnswer} />\n        )}\n        {result && (\n          <Result\n            result={result}\n            score={score}\n            totalRounds={totalRounds}\n            highScore={highScore}\n            onPlayAgain={handlePlayAgain}\n          />\n        )}\n      </Box>\n    </Container>\n  );\n};\n\nexport default Game;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,MAAM,EAAEC,UAAU,EAAEC,GAAG,EAAEC,SAAS,QAAQ,eAAe;AAClE,SAASC,SAAS,EAAEC,WAAW,EAAEC,YAAY,QAAQ,QAAQ;AAE7D,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG,IAAIC,KAAK,CAAC,qBAAqB,CAAC;AACrD,MAAMC,cAAc,GAAG,IAAID,KAAK,CAAC,uBAAuB,CAAC;AACzD,MAAME,aAAa,GAAG,IAAIF,KAAK,CAAC,uBAAuB,CAAC;AAExD,MAAMG,IAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAsB,IAAI,CAAC;EAC3E,MAAM,CAACwB,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAwB,IAAI,CAAC;EACjE,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAAC8B,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAM+B,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACzD,IAAIF,eAAe,EAAE;MACnBD,YAAY,CAACI,QAAQ,CAACH,eAAe,EAAE,EAAE,CAAC,CAAC;IAC7C;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,SAAS,GAAGlC,WAAW,CAAEmC,KAAuB,IAAK;IACzDA,KAAK,CAACC,WAAW,GAAG,CAAC,CAAC,CAAC;IACvBD,KAAK,CAACE,IAAI,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAM;MAAEZ;IAAY,CAAC,GAAG,MAAMrB,SAAS,CAAC,CAAC;IACzCsB,cAAc,CAACD,WAAW,CAAC;IAC3BP,cAAc,CAAC,IAAI,CAAC;IACpBM,QAAQ,CAAC,CAAC,CAAC;IACXc,aAAa,CAAC,CAAC;EACjB,CAAC;EAED,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,IAAI,GAAG,MAAMlC,WAAW,CAAC,CAAC;IAChCe,eAAe,CAACmB,IAAI,CAAC;IACrBjB,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,MAAMkB,YAAY,GAAG,MAAOC,MAAc,IAAK;IAC7C,MAAMC,QAAQ,GAAG,MAAMpC,YAAY,CAACmC,MAAM,CAAC;IAC3CnB,SAAS,CAACoB,QAAQ,CAAC;IACnBlB,QAAQ,CAACkB,QAAQ,CAACnB,KAAK,CAAC;IAExB,IAAImB,QAAQ,CAACC,SAAS,EAAE;MACtBV,SAAS,CAACtB,YAAY,CAAC;IACzB,CAAC,MAAM;MACLsB,SAAS,CAACpB,cAAc,CAAC;IAC3B;IAEA,IAAI6B,QAAQ,CAACE,QAAQ,EAAE;MACrBX,SAAS,CAACnB,aAAa,CAAC;MACxB,IAAI4B,QAAQ,CAACnB,KAAK,GAAGI,SAAS,EAAE;QAC9BC,YAAY,CAACc,QAAQ,CAACnB,KAAK,CAAC;QAC5BO,YAAY,CAACe,OAAO,CAAC,WAAW,EAAEH,QAAQ,CAACnB,KAAK,CAACuB,QAAQ,CAAC,CAAC,CAAC;MAC9D;IACF,CAAC,MAAM;MACLC,UAAU,CAACT,aAAa,EAAE,IAAI,CAAC;IACjC;EACF,CAAC;EAED,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC5B9B,cAAc,CAAC,KAAK,CAAC;IACrBE,eAAe,CAAC,IAAI,CAAC;IACrBE,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,IAAI,CAACL,WAAW,EAAE;IAChB,oBACEP,OAAA,CAACP,SAAS;MAAC8C,QAAQ,EAAC,IAAI;MAAAC,QAAA,eACtBxC,OAAA,CAACR,GAAG;QAACiD,SAAS,EAAC,QAAQ;QAACC,EAAE,EAAE,CAAE;QAAAF,QAAA,gBAC5BxC,OAAA,CAACT,UAAU;UAACoD,OAAO,EAAC,IAAI;UAACC,YAAY;UAAAJ,QAAA,EAAC;QAEtC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbhD,OAAA,CAACT,UAAU;UAACoD,OAAO,EAAC,IAAI;UAACC,YAAY;UAAAJ,QAAA,GAAC,cACxB,EAACvB,SAAS;QAAA;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,eACbhD,OAAA,CAACV,MAAM;UAACqD,OAAO,EAAC,WAAW;UAACM,KAAK,EAAC,SAAS;UAACC,OAAO,EAAEvB,eAAgB;UAAAa,QAAA,EAAC;QAEtE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAEhB;EAEA,oBACEhD,OAAA,CAACP,SAAS;IAAC8C,QAAQ,EAAC,IAAI;IAAAC,QAAA,eACtBxC,OAAA,CAACR,GAAG;MAACiD,SAAS,EAAC,QAAQ;MAACC,EAAE,EAAE,CAAE;MAAAF,QAAA,gBAC5BxC,OAAA,CAACT,UAAU;QAACoD,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAJ,QAAA,EAAC;MAEtC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbhD,OAAA,CAACT,UAAU;QAACoD,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAJ,QAAA,GAAC,SAC7B,EAAC3B,KAAK,EAAC,KAAG,EAACE,WAAW;MAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,EACZvC,YAAY,IAAI,CAACE,MAAM,iBACtBX,OAAA,CAACH,QAAQ;QAACgC,IAAI,EAAEpB,YAAa;QAAC0C,QAAQ,EAAErB;MAAa;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACxD,EACArC,MAAM,iBACLX,OAAA,CAACF,MAAM;QACLa,MAAM,EAAEA,MAAO;QACfE,KAAK,EAAEA,KAAM;QACbE,WAAW,EAAEA,WAAY;QACzBE,SAAS,EAAEA,SAAU;QACrBmC,WAAW,EAAEd;MAAgB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAC1C,EAAA,CAxGID,IAAc;AAAAgD,EAAA,GAAdhD,IAAc;AA0GpB,eAAeA,IAAI;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}