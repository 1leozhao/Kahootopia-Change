{"ast":null,"code":"var _jsxFileName = \"/Users/leozhao/ws/change++/geographygame/geography-trivia/src/components/Result.tsx\";\nimport React from 'react';\nimport { Button, Typography, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Result = ({\n  result,\n  onNextQuestion,\n  onPlayAgain\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: result.isCorrect ? 'Correct!' : 'Incorrect'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      children: [\"The correct answer was: \", result.correctAnswer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      children: [\"Your current score: \", result.score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), result.gameOver ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        gutterBottom: true,\n        children: [\"Your final score: \", result.totalScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: onPlayAgain,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: onNextQuestion,\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","Button","Typography","Box","jsxDEV","_jsxDEV","Fragment","_Fragment","Result","result","onNextQuestion","onPlayAgain","children","variant","gutterBottom","isCorrect","fileName","_jsxFileName","lineNumber","columnNumber","correctAnswer","score","gameOver","totalScore","color","onClick","_c","$RefreshReg$"],"sources":["/Users/leozhao/ws/change++/geographygame/geography-trivia/src/components/Result.tsx"],"sourcesContent":["import React from 'react';\nimport { Button, Typography, Box } from '@mui/material';\nimport { AnswerResponse } from '../types';\n\ninterface ResultProps {\n  result: AnswerResponse;\n  onNextQuestion: () => void;\n  onPlayAgain: () => void;\n}\n\nconst Result: React.FC<ResultProps> = ({ result, onNextQuestion, onPlayAgain }) => {\n  return (\n    <Box>\n      <Typography variant=\"h6\" gutterBottom>\n        {result.isCorrect ? 'Correct!' : 'Incorrect'}\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        The correct answer was: {result.correctAnswer}\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        Your current score: {result.score}\n      </Typography>\n      {result.gameOver ? (\n        <>\n          <Typography variant=\"h6\" gutterBottom>\n            Game Over!\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            Your final score: {result.totalScore}\n          </Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={onPlayAgain}>\n            Play Again\n          </Button>\n        </>\n      ) : (\n        <Button variant=\"contained\" color=\"primary\" onClick={onNextQuestion}>\n          Next Question\n        </Button>\n      )}\n    </Box>\n  );\n};\n\nexport default Result;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,UAAU,EAAEC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AASxD,MAAMC,MAA6B,GAAGA,CAAC;EAAEC,MAAM;EAAEC,cAAc;EAAEC;AAAY,CAAC,KAAK;EACjF,oBACEN,OAAA,CAACF,GAAG;IAAAS,QAAA,gBACFP,OAAA,CAACH,UAAU;MAACW,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAClCH,MAAM,CAACM,SAAS,GAAG,UAAU,GAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACbd,OAAA,CAACH,UAAU;MAACW,OAAO,EAAC,OAAO;MAACC,YAAY;MAAAF,QAAA,GAAC,0BACf,EAACH,MAAM,CAACW,aAAa;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACbd,OAAA,CAACH,UAAU;MAACW,OAAO,EAAC,OAAO;MAACC,YAAY;MAAAF,QAAA,GAAC,sBACnB,EAACH,MAAM,CAACY,KAAK;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,EACZV,MAAM,CAACa,QAAQ,gBACdjB,OAAA,CAAAE,SAAA;MAAAK,QAAA,gBACEP,OAAA,CAACH,UAAU;QAACW,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAF,QAAA,EAAC;MAEtC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbd,OAAA,CAACH,UAAU;QAACW,OAAO,EAAC,OAAO;QAACC,YAAY;QAAAF,QAAA,GAAC,oBACrB,EAACH,MAAM,CAACc,UAAU;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACbd,OAAA,CAACJ,MAAM;QAACY,OAAO,EAAC,WAAW;QAACW,KAAK,EAAC,SAAS;QAACC,OAAO,EAAEd,WAAY;QAAAC,QAAA,EAAC;MAElE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CAAC,gBAEHd,OAAA,CAACJ,MAAM;MAACY,OAAO,EAAC,WAAW;MAACW,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEf,cAAe;MAAAE,QAAA,EAAC;IAErE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACO,EAAA,GA/BIlB,MAA6B;AAiCnC,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}