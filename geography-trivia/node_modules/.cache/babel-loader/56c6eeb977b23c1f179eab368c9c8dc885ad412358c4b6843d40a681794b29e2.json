{"ast":null,"code":"var _jsxFileName = \"/Users/leozhao/ws/change++/geographygame/geography-trivia/src/components/Game.tsx\",\n  _s = $RefreshSig$();\n// Game.tsx\nimport React, { useState, useEffect } from 'react';\nimport { Button, Typography, Box, Container } from '@mui/material';\nimport { startGame, getQuestion, submitAnswer } from '../api';\nimport Question from './Question';\nimport Result from './Result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [gameStarted, setGameStarted] = useState(false);\n  const [questionData, setQuestionData] = useState(null);\n  const [result, setResult] = useState(null);\n  const [score, setScore] = useState(0);\n  const [totalRounds, setTotalRounds] = useState(5);\n  const [highScore, setHighScore] = useState(0);\n  useEffect(() => {\n    // Load high score from local storage when component mounts\n    const storedHighScore = localStorage.getItem('highScore');\n    if (storedHighScore) {\n      setHighScore(parseInt(storedHighScore, 10));\n    }\n  }, []);\n  const handleStartGame = async () => {\n    const {\n      totalRounds\n    } = await startGame();\n    setTotalRounds(totalRounds);\n    setGameStarted(true);\n    setScore(0);\n    fetchQuestion();\n  };\n  const fetchQuestion = async () => {\n    const data = await getQuestion();\n    setQuestionData(data);\n    setResult(null);\n  };\n  const handleAnswer = async answer => {\n    const response = await submitAnswer(answer);\n    setResult(response);\n    setScore(response.score);\n    if (response.gameOver) {\n      // Check if current score is a new high score\n      if (response.score > highScore) {\n        setHighScore(response.score);\n        localStorage.setItem('highScore', response.score.toString());\n      }\n    } else {\n      setTimeout(fetchQuestion, 2000);\n    }\n  };\n  const handlePlayAgain = () => {\n    setGameStarted(false);\n    setQuestionData(null);\n    setResult(null);\n  };\n  if (!gameStarted) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        mt: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Geography Trivia Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"High Score: \", highScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleStartGame,\n          children: \"Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Geography Trivia Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: [\"Score: \", score, \" / \", totalRounds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), questionData && !result && /*#__PURE__*/_jsxDEV(Question, {\n        data: questionData,\n        onAnswer: handleAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), result && /*#__PURE__*/_jsxDEV(Result, {\n        result: result,\n        score: score,\n        totalRounds: totalRounds,\n        highScore: highScore,\n        onPlayAgain: handlePlayAgain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"6B6U7SReMb2V6sSeAUYdLgkO+rY=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Button","Typography","Box","Container","startGame","getQuestion","submitAnswer","Question","Result","jsxDEV","_jsxDEV","Game","_s","gameStarted","setGameStarted","questionData","setQuestionData","result","setResult","score","setScore","totalRounds","setTotalRounds","highScore","setHighScore","storedHighScore","localStorage","getItem","parseInt","handleStartGame","fetchQuestion","data","handleAnswer","answer","response","gameOver","setItem","toString","setTimeout","handlePlayAgain","maxWidth","children","textAlign","mt","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","onAnswer","onPlayAgain","_c","$RefreshReg$"],"sources":["/Users/leozhao/ws/change++/geographygame/geography-trivia/src/components/Game.tsx"],"sourcesContent":["// Game.tsx\nimport React, { useState, useEffect } from 'react';\nimport { Button, Typography, Box, Container } from '@mui/material';\nimport { startGame, getQuestion, submitAnswer } from '../api';\nimport { QuestionData, AnswerResponse } from '../types';\nimport Question from './Question';\nimport Result from './Result';\n\nconst Game: React.FC = () => {\n  const [gameStarted, setGameStarted] = useState(false);\n  const [questionData, setQuestionData] = useState<QuestionData | null>(null);\n  const [result, setResult] = useState<AnswerResponse | null>(null);\n  const [score, setScore] = useState(0);\n  const [totalRounds, setTotalRounds] = useState(5);\n  const [highScore, setHighScore] = useState(0);\n\n  useEffect(() => {\n    // Load high score from local storage when component mounts\n    const storedHighScore = localStorage.getItem('highScore');\n    if (storedHighScore) {\n      setHighScore(parseInt(storedHighScore, 10));\n    }\n  }, []);\n\n  const handleStartGame = async () => {\n    const { totalRounds } = await startGame();\n    setTotalRounds(totalRounds);\n    setGameStarted(true);\n    setScore(0);\n    fetchQuestion();\n  };\n\n  const fetchQuestion = async () => {\n    const data = await getQuestion();\n    setQuestionData(data);\n    setResult(null);\n  };\n\n  const handleAnswer = async (answer: string) => {\n    const response = await submitAnswer(answer);\n    setResult(response);\n    setScore(response.score);\n\n    if (response.gameOver) {\n      // Check if current score is a new high score\n      if (response.score > highScore) {\n        setHighScore(response.score);\n        localStorage.setItem('highScore', response.score.toString());\n      }\n    } else {\n      setTimeout(fetchQuestion, 2000);\n    }\n  };\n\n  const handlePlayAgain = () => {\n    setGameStarted(false);\n    setQuestionData(null);\n    setResult(null);\n  };\n\n  if (!gameStarted) {\n    return (\n      <Container maxWidth=\"sm\">\n        <Box textAlign=\"center\" mt={4}>\n          <Typography variant=\"h4\" gutterBottom>\n            Geography Trivia Game\n          </Typography>\n          <Typography variant=\"h6\" gutterBottom>\n            High Score: {highScore}\n          </Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleStartGame}>\n            Start Game\n          </Button>\n        </Box>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box textAlign=\"center\" mt={4}>\n        <Typography variant=\"h4\" gutterBottom>\n          Geography Trivia Game\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom>\n          Score: {score} / {totalRounds}\n        </Typography>\n        {questionData && !result && (\n          <Question data={questionData} onAnswer={handleAnswer} />\n        )}\n        {result && (\n          <Result\n            result={result}\n            score={score}\n            totalRounds={totalRounds}\n            highScore={highScore}\n            onPlayAgain={handlePlayAgain}\n          />\n        )}\n      </Box>\n    </Container>\n  );\n};\n\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}