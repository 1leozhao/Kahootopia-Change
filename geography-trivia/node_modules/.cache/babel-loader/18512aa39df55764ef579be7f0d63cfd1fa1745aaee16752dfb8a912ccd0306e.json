{"ast":null,"code":"var _jsxFileName = \"/Users/leozhao/ws/change++/geographygame/geography-trivia/src/components/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ThemeProvider, createTheme, styled } from '@mui/material/styles';\nimport { Button, Typography, Box, Container, CssBaseline } from '@mui/material';\nimport axios from 'axios';\nimport { startGame, getQuestion, submitAnswer } from '../api';\nimport Question from './Question';\nimport Result from './Result';\n\n// Create audio objects for each sound\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst correctSound = new Audio('/sounds/correct.mp3');\nconst incorrectSound = new Audio('/sounds/incorrect.mp3');\nconst gameOverSound = new Audio('/sounds/game-over.mp3');\n\n// Define a custom theme using Material-UI\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#46178f' // Kahoot-like purple for primary elements\n    },\n    secondary: {\n      main: '#FFC300' // Soft yellow for buttons and highlights\n    },\n    success: {\n      main: '#43B929' // Green for correct answers\n    },\n    background: {\n      default: '#46178f',\n      // Background color for the app\n      paper: '#FFFFFF' // Background color for cards\n    }\n  },\n  typography: {\n    fontFamily: '\"Montserrat\", sans-serif',\n    allVariants: {\n      fontFamily: '\"Montserrat\", sans-serif'\n    },\n    h4: {\n      fontWeight: 700\n    },\n    h6: {\n      fontWeight: 600\n    },\n    button: {\n      fontWeight: 600\n    }\n  },\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: `\n        @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;700&display=swap');\n        body {\n          font-family: 'Montserrat', sans-serif;\n        }\n      `\n    }\n  }\n});\n\n// Styled container for the main content\nconst StyledContainer = styled(Container)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.shape.borderRadius,\n  padding: theme.spacing(3),\n  boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\n}));\n_c = StyledContainer;\nconst Game = () => {\n  _s();\n  const [gameStarted, setGameStarted] = useState(false);\n  const [questionData, setQuestionData] = useState(null);\n  const [result, setResult] = useState(null);\n  const [score, setScore] = useState(0);\n  const [totalRounds, setTotalRounds] = useState(5);\n  const [highScore, setHighScore] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const totalTime = 10; // Total time for each question\n\n  useEffect(() => {\n    const storedHighScore = localStorage.getItem('highScore');\n    if (storedHighScore) {\n      setHighScore(parseInt(storedHighScore, 10));\n    }\n  }, []);\n  useEffect(() => {\n    let timer;\n    if (gameStarted && questionData && !result) {\n      timer = setInterval(() => {\n        setTimeLeft(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(timer);\n            handleAnswer(''); // Submit empty answer when time's up\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [gameStarted, questionData, result]);\n  const playSound = useCallback(sound => {\n    sound.currentTime = 0;\n    sound.play();\n  }, []);\n  const handleStartGame = async () => {\n    try {\n      const {\n        totalRounds\n      } = await startGame();\n      setTotalRounds(totalRounds);\n      setGameStarted(true);\n      setScore(0);\n      fetchQuestion();\n    } catch (error) {\n      console.error('Error starting game:', error);\n    }\n  };\n  const fetchQuestion = async () => {\n    try {\n      const data = await getQuestion();\n      setQuestionData(data);\n      setResult(null);\n      setTimeLeft(totalTime);\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching question:', error);\n      if (axios.isAxiosError(error) && ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 400) {\n        console.warn('Game might be over or there was an issue fetching the next question.');\n        setResult({\n          isCorrect: false,\n          correctAnswer: '',\n          gameOver: true,\n          points: 0,\n          score: score,\n          totalScore: score\n        });\n      }\n    }\n  };\n  const calculatePoints = timeLeft => {\n    return Math.round(timeLeft / totalTime * 1000);\n  };\n  const handleAnswer = async answer => {\n    if (result !== null && result !== void 0 && result.gameOver) {\n      console.warn('Game is already over. Cannot submit more answers.');\n      return;\n    }\n    const points = calculatePoints(timeLeft);\n    try {\n      const response = await submitAnswer(answer);\n      let earnedPoints = 0;\n      if (response.isCorrect) {\n        earnedPoints = points;\n        setScore(prevScore => prevScore + points);\n        playSound(correctSound);\n      } else {\n        playSound(incorrectSound);\n      }\n      setResult({\n        ...response,\n        points: earnedPoints\n      });\n      if (response.gameOver) {\n        playSound(gameOverSound);\n        const finalScore = score + earnedPoints;\n        if (finalScore > highScore) {\n          setHighScore(finalScore);\n          localStorage.setItem('highScore', finalScore.toString());\n        }\n      } else {\n        setTimeout(fetchQuestion, 2000);\n      }\n    } catch (error) {\n      var _error$response2;\n      console.error('Error submitting answer:', error);\n      if (axios.isAxiosError(error) && ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 400) {\n        console.warn('Game might be over or there was an issue with the answer submission.');\n        setResult({\n          isCorrect: false,\n          correctAnswer: '',\n          gameOver: true,\n          points: 0,\n          score: score,\n          totalScore: score\n        });\n      }\n    }\n  };\n  const handlePlayAgain = () => {\n    setGameStarted(false);\n    setQuestionData(null);\n    setResult(null);\n    setScore(0);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        minHeight: '100vh',\n        backgroundColor: 'primary.main',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundImage: 'url(\"/images/world-map-outline.svg\")',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: 'cover'\n      },\n      children: /*#__PURE__*/_jsxDEV(StyledContainer, {\n        maxWidth: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          align: \"center\",\n          color: \"primary\",\n          children: \"Geography Trivia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), !gameStarted ? /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: [\"High Score: \", highScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: handleStartGame,\n            size: \"large\",\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            align: \"center\",\n            children: [\"Score: \", score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), questionData && !result && /*#__PURE__*/_jsxDEV(Question, {\n            data: questionData,\n            onAnswer: handleAnswer,\n            timeLeft: timeLeft,\n            totalTime: totalTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this), result && /*#__PURE__*/_jsxDEV(Result, {\n            result: result,\n            score: score,\n            totalRounds: totalRounds,\n            highScore: highScore,\n            onPlayAgain: handlePlayAgain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"b535x+7wirc8RP9+LaXiugFvZ2U=\");\n_c2 = Game;\nexport default Game;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ThemeProvider","createTheme","styled","Button","Typography","Box","Container","CssBaseline","axios","startGame","getQuestion","submitAnswer","Question","Result","jsxDEV","_jsxDEV","Fragment","_Fragment","correctSound","Audio","incorrectSound","gameOverSound","theme","palette","primary","main","secondary","success","background","default","paper","typography","fontFamily","allVariants","h4","fontWeight","h6","button","components","MuiCssBaseline","styleOverrides","StyledContainer","backgroundColor","borderRadius","shape","padding","spacing","boxShadow","_c","Game","_s","gameStarted","setGameStarted","questionData","setQuestionData","result","setResult","score","setScore","totalRounds","setTotalRounds","highScore","setHighScore","timeLeft","setTimeLeft","totalTime","storedHighScore","localStorage","getItem","parseInt","timer","setInterval","prevTime","clearInterval","handleAnswer","playSound","sound","currentTime","play","handleStartGame","fetchQuestion","error","console","data","_error$response","isAxiosError","response","status","warn","isCorrect","correctAnswer","gameOver","points","totalScore","calculatePoints","Math","round","answer","earnedPoints","prevScore","finalScore","setItem","toString","setTimeout","_error$response2","handlePlayAgain","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","minHeight","display","alignItems","justifyContent","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","maxWidth","variant","gutterBottom","align","color","textAlign","onClick","size","onAnswer","onPlayAgain","_c2","$RefreshReg$"],"sources":["/Users/leozhao/ws/change++/geographygame/geography-trivia/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { ThemeProvider, createTheme, styled } from '@mui/material/styles';\nimport { Button, Typography, Box, Container, CssBaseline } from '@mui/material';\nimport axios from 'axios';\nimport { startGame, getQuestion, submitAnswer } from '../api';\nimport { QuestionData, AnswerResponse } from '../types';\nimport Question from './Question';\nimport Result from './Result';\n\n// Create audio objects for each sound\nconst correctSound = new Audio('/sounds/correct.mp3');\nconst incorrectSound = new Audio('/sounds/incorrect.mp3');\nconst gameOverSound = new Audio('/sounds/game-over.mp3');\n\n// Define a custom theme using Material-UI\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#46178f', // Kahoot-like purple for primary elements\n    },\n    secondary: {\n      main: '#FFC300', // Soft yellow for buttons and highlights\n    },\n    success: {\n      main: '#43B929', // Green for correct answers\n    },\n    background: {\n      default: '#46178f', // Background color for the app\n      paper: '#FFFFFF', // Background color for cards\n    },\n  },\n  typography: {\n    fontFamily: '\"Montserrat\", sans-serif',\n    allVariants: {\n      fontFamily: '\"Montserrat\", sans-serif',\n    },\n    h4: {\n      fontWeight: 700,\n    },\n    h6: {\n      fontWeight: 600,\n    },\n    button: {\n      fontWeight: 600,\n    },\n  },\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: `\n        @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;700&display=swap');\n        body {\n          font-family: 'Montserrat', sans-serif;\n        }\n      `,\n    },\n  },\n});\n\n// Styled container for the main content\nconst StyledContainer = styled(Container)(({ theme }) => ({\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.shape.borderRadius,\n  padding: theme.spacing(3),\n  boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n}));\n\nconst Game: React.FC = () => {\n  const [gameStarted, setGameStarted] = useState(false);\n  const [questionData, setQuestionData] = useState<QuestionData | null>(null);\n  const [result, setResult] = useState<AnswerResponse | null>(null);\n  const [score, setScore] = useState(0);\n  const [totalRounds, setTotalRounds] = useState(5);\n  const [highScore, setHighScore] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const totalTime = 10; // Total time for each question\n\n  useEffect(() => {\n    const storedHighScore = localStorage.getItem('highScore');\n    if (storedHighScore) {\n      setHighScore(parseInt(storedHighScore, 10));\n    }\n  }, []);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n    if (gameStarted && questionData && !result) {\n      timer = setInterval(() => {\n        setTimeLeft((prevTime) => {\n          if (prevTime <= 1) {\n            clearInterval(timer);\n            handleAnswer(''); // Submit empty answer when time's up\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [gameStarted, questionData, result]);\n\n  const playSound = useCallback((sound: HTMLAudioElement) => {\n    sound.currentTime = 0;\n    sound.play();\n  }, []);\n\n  const handleStartGame = async () => {\n    try {\n      const { totalRounds } = await startGame();\n      setTotalRounds(totalRounds);\n      setGameStarted(true);\n      setScore(0);\n      fetchQuestion();\n    } catch (error) {\n      console.error('Error starting game:', error);\n    }\n  };\n\n  const fetchQuestion = async () => {\n    try {\n      const data = await getQuestion();\n      setQuestionData(data);\n      setResult(null);\n      setTimeLeft(totalTime);\n    } catch (error) {\n      console.error('Error fetching question:', error);\n      if (axios.isAxiosError(error) && error.response?.status === 400) {\n        console.warn('Game might be over or there was an issue fetching the next question.');\n        setResult({\n          isCorrect: false,\n          correctAnswer: '',\n          gameOver: true,\n          points: 0,\n          score: score,\n          totalScore: score,\n        });\n      }\n    }\n  };\n\n  const calculatePoints = (timeLeft: number): number => {\n    return Math.round((timeLeft / totalTime) * 1000);\n  };\n\n  const handleAnswer = async (answer: string) => {\n    if (result?.gameOver) {\n      console.warn('Game is already over. Cannot submit more answers.');\n      return;\n    }\n\n    const points = calculatePoints(timeLeft);\n    \n    try {\n      const response = await submitAnswer(answer);\n      \n      let earnedPoints = 0;\n      if (response.isCorrect) {\n        earnedPoints = points;\n        setScore((prevScore) => prevScore + points);\n        playSound(correctSound);\n      } else {\n        playSound(incorrectSound);\n      }\n      \n      setResult({ ...response, points: earnedPoints });\n\n      if (response.gameOver) {\n        playSound(gameOverSound);\n        const finalScore = score + earnedPoints;\n        if (finalScore > highScore) {\n          setHighScore(finalScore);\n          localStorage.setItem('highScore', finalScore.toString());\n        }\n      } else {\n        setTimeout(fetchQuestion, 2000);\n      }\n    } catch (error) {\n      console.error('Error submitting answer:', error);\n      if (axios.isAxiosError(error) && error.response?.status === 400) {\n        console.warn('Game might be over or there was an issue with the answer submission.');\n        setResult({\n          isCorrect: false,\n          correctAnswer: '',\n          gameOver: true,\n          points: 0,\n          score: score,\n          totalScore: score,\n        });\n      }\n    }\n  };\n\n  const handlePlayAgain = () => {\n    setGameStarted(false);\n    setQuestionData(null);\n    setResult(null);\n    setScore(0);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box \n        sx={{ \n          minHeight: '100vh', \n          backgroundColor: 'primary.main',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundImage: 'url(\"/images/world-map-outline.svg\")',\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n        }}\n      >\n        <StyledContainer maxWidth=\"sm\">\n          <Typography variant=\"h4\" gutterBottom align=\"center\" color=\"primary\">\n            Geography Trivia\n          </Typography>\n          {!gameStarted ? (\n            <Box textAlign=\"center\">\n              <Typography variant=\"h6\" gutterBottom>\n                High Score: {highScore}\n              </Typography>\n              <Button \n                variant=\"contained\" \n                color=\"secondary\" \n                onClick={handleStartGame}\n                size=\"large\"\n              >\n                Start Game\n              </Button>\n            </Box>\n          ) : (\n            <>\n              <Typography variant=\"h6\" gutterBottom align=\"center\">\n                Score: {score}\n              </Typography>\n              {questionData && !result && (\n                <Question \n                  data={questionData} \n                  onAnswer={handleAnswer}\n                  timeLeft={timeLeft}\n                  totalTime={totalTime}\n                />\n              )}\n              {result && (\n                <Result\n                  result={result}\n                  score={score}\n                  totalRounds={totalRounds}\n                  highScore={highScore}\n                  onPlayAgain={handlePlayAgain}\n                />\n              )}\n            </>\n          )}\n        </StyledContainer>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}