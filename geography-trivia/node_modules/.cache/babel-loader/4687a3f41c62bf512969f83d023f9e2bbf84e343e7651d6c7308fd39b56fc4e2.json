{"ast":null,"code":"var _jsxFileName = \"/Users/leozhao/ws/change++/geographygame/geography-trivia/src/components/Question.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Typography, Box, Grid, LinearProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  data,\n  onAnswer,\n  timeLeft,\n  totalTime\n}) => {\n  _s();\n  const [showHint, setShowHint] = useState(false);\n  const colors = ['#eb21b3', '#1368ce', '#ffa602', '#26890c'];\n\n  // Calculate the progress value (from 100 to 0)\n  const timerProgress = timeLeft / totalTime * 100;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\",\n      value: timerProgress,\n      sx: {\n        height: 10,\n        mb: 2,\n        '& .MuiLinearProgress-bar': {\n          transition: 'none' // Remove transition for smoother updates\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      style: {\n        fontFamily: 'Montserrat'\n      },\n      children: [\"Round \", data.round, \" of \", data.totalRounds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      style: {\n        fontFamily: 'Montserrat'\n      },\n      children: data.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      mt: 2,\n      children: data.options.map((option, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"contained\",\n          onClick: () => onAnswer(option),\n          style: {\n            backgroundColor: colors[index],\n            color: 'white',\n            height: '100px',\n            fontFamily: 'Montserrat'\n          },\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        onClick: () => setShowHint(true),\n        disabled: showHint,\n        style: {\n          fontFamily: 'Montserrat'\n        },\n        children: \"Show Hint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), showHint && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      mt: 2,\n      color: \"text.secondary\",\n      style: {\n        fontFamily: 'Montserrat'\n      },\n      children: [\"Hint: \", data.hint]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Question, \"iGRoQeBnQBiMcJBk/UL8dFMs1ik=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","Button","Typography","Box","Grid","LinearProgress","jsxDEV","_jsxDEV","Question","data","onAnswer","timeLeft","totalTime","_s","showHint","setShowHint","colors","timerProgress","children","variant","value","sx","height","mb","transition","fileName","_jsxFileName","lineNumber","columnNumber","gutterBottom","style","fontFamily","round","totalRounds","question","container","spacing","mt","options","map","option","index","item","xs","fullWidth","onClick","backgroundColor","color","disabled","hint","_c","$RefreshReg$"],"sources":["/Users/leozhao/ws/change++/geographygame/geography-trivia/src/components/Question.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Typography, Box, Grid, LinearProgress } from '@mui/material';\nimport { QuestionData } from '../types';\n\ninterface QuestionProps {\n  data: QuestionData;\n  onAnswer: (answer: string) => void;\n  timeLeft: number; // Add this prop to receive the time left from the parent component\n  totalTime: number; // Add this prop to know the total time for each question\n}\n\nconst Question: React.FC<QuestionProps> = ({ data, onAnswer, timeLeft, totalTime }) => {\n  const [showHint, setShowHint] = useState(false);\n  const colors = ['#eb21b3', '#1368ce', '#ffa602', '#26890c'];\n\n  // Calculate the progress value (from 100 to 0)\n  const timerProgress = (timeLeft / totalTime) * 100;\n\n  return (\n    <Box>\n      <LinearProgress \n        variant=\"determinate\" \n        value={timerProgress} \n        sx={{ \n          height: 10, \n          mb: 2,\n          '& .MuiLinearProgress-bar': {\n            transition: 'none', // Remove transition for smoother updates\n          }\n        }}\n      />\n      <Typography variant=\"h6\" gutterBottom style={{ fontFamily: 'Montserrat' }}>\n        Round {data.round} of {data.totalRounds}\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom style={{ fontFamily: 'Montserrat' }}>\n        {data.question}\n      </Typography>\n      <Grid container spacing={2} mt={2}>\n        {data.options.map((option, index) => (\n          <Grid item xs={6} key={index}>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              onClick={() => onAnswer(option)}\n              style={{\n                backgroundColor: colors[index],\n                color: 'white',\n                height: '100px',\n                fontFamily: 'Montserrat',\n              }}\n            >\n              {option}\n            </Button>\n          </Grid>\n        ))}\n      </Grid>\n      <Box mt={2}>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          onClick={() => setShowHint(true)}\n          disabled={showHint}\n          style={{ fontFamily: 'Montserrat' }}\n        >\n          Show Hint\n        </Button>\n      </Box>\n      {showHint && (\n        <Typography variant=\"body2\" mt={2} color=\"text.secondary\" style={{ fontFamily: 'Montserrat' }}>\n          Hint: {data.hint}\n        </Typography>\n      )}\n    </Box>\n  );\n};\n\nexport default Question;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}