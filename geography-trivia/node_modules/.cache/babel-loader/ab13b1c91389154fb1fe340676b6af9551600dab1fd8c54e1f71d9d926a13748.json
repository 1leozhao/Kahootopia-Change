{"ast":null,"code":"var _jsxFileName = \"/Users/leozhao/ws/change++/geographygame/geography-trivia/src/components/Question.tsx\";\nimport React from 'react';\nimport { Button, Typography, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  data,\n  onAnswer\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: [\"Round \", data.round, \" of \", data.totalRounds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      children: data.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"grid\",\n      gridTemplateColumns: \"1fr 1fr\",\n      gap: 2,\n      mt: 2,\n      children: data.options.map((option, index) => /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => onAnswer(option),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","Button","Typography","Box","jsxDEV","_jsxDEV","Question","data","onAnswer","children","variant","gutterBottom","round","totalRounds","fileName","_jsxFileName","lineNumber","columnNumber","question","display","gridTemplateColumns","gap","mt","options","map","option","index","color","onClick","_c","$RefreshReg$"],"sources":["/Users/leozhao/ws/change++/geographygame/geography-trivia/src/components/Question.tsx"],"sourcesContent":["import React from 'react';\nimport { Button, Typography, Box } from '@mui/material';\nimport { QuestionData } from '../types';\n\ninterface QuestionProps {\n  data: QuestionData;\n  onAnswer: (answer: string) => void;\n}\n\nconst Question: React.FC<QuestionProps> = ({ data, onAnswer }) => {\n  return (\n    <Box>\n      <Typography variant=\"h6\" gutterBottom>\n        Round {data.round} of {data.totalRounds}\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        {data.question}\n      </Typography>\n      <Box display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gap={2} mt={2}>\n        {data.options.map((option, index) => (\n          <Button\n            key={index}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => onAnswer(option)}\n          >\n            {option}\n          </Button>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Question;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,UAAU,EAAEC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQxD,MAAMC,QAAiC,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAK;EAChE,oBACEH,OAAA,CAACF,GAAG;IAAAM,QAAA,gBACFJ,OAAA,CAACH,UAAU;MAACQ,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,GAAC,QAC9B,EAACF,IAAI,CAACK,KAAK,EAAC,MAAI,EAACL,IAAI,CAACM,WAAW;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACbZ,OAAA,CAACH,UAAU;MAACQ,OAAO,EAAC,OAAO;MAACC,YAAY;MAAAF,QAAA,EACrCF,IAAI,CAACW;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACbZ,OAAA,CAACF,GAAG;MAACgB,OAAO,EAAC,MAAM;MAACC,mBAAmB,EAAC,SAAS;MAACC,GAAG,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAb,QAAA,EAC7DF,IAAI,CAACgB,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC9BrB,OAAA,CAACJ,MAAM;QAELS,OAAO,EAAC,WAAW;QACnBiB,KAAK,EAAC,SAAS;QACfC,OAAO,EAAEA,CAAA,KAAMpB,QAAQ,CAACiB,MAAM,CAAE;QAAAhB,QAAA,EAE/BgB;MAAM,GALFC,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMJ,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACY,EAAA,GAvBIvB,QAAiC;AAyBvC,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}