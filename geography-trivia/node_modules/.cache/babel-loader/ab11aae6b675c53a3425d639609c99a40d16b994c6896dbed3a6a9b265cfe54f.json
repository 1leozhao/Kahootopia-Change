{"ast":null,"code":"var _jsxFileName = \"/Users/leozhao/ws/change++/geographygame/geography-trivia/src/components/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ThemeProvider, createTheme, styled } from '@mui/material/styles';\nimport { Button, Typography, Box, Container, LinearProgress } from '@mui/material';\nimport { startGame, getQuestion, submitAnswer } from '../api';\nimport Question from './Question';\nimport Result from './Result';\n\n// Create audio objects for each sound\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst correctSound = new Audio('/sounds/correct.mp3');\nconst incorrectSound = new Audio('/sounds/incorrect.mp3');\nconst gameOverSound = new Audio('/sounds/game-over.mp3');\n\n// Define a custom theme using Material-UI\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1E3D58' // Deep blue for primary elements\n    },\n    secondary: {\n      main: '#FFC300' // Soft yellow for buttons and highlights\n    },\n    success: {\n      main: '#43B929' // Green for correct answers\n    },\n    background: {\n      default: '#1E3D58',\n      // Background color for the app\n      paper: '#FFFFFF' // Background color for cards\n    }\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    h4: {\n      fontFamily: '\"Montserrat\", sans-serif',\n      fontWeight: 700\n    },\n    h6: {\n      fontFamily: '\"Montserrat\", sans-serif',\n      fontWeight: 600\n    }\n  }\n});\n\n// Styled container for the main content\nconst StyledContainer = styled(Container)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.shape.borderRadius,\n  padding: theme.spacing(3),\n  boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\n}));\n_c = StyledContainer;\nconst Game = () => {\n  _s();\n  const [gameStarted, setGameStarted] = useState(false);\n  const [questionData, setQuestionData] = useState(null);\n  const [result, setResult] = useState(null);\n  const [score, setScore] = useState(0);\n  const [totalRounds, setTotalRounds] = useState(5);\n  const [highScore, setHighScore] = useState(0);\n  useEffect(() => {\n    const storedHighScore = localStorage.getItem('highScore');\n    if (storedHighScore) {\n      setHighScore(parseInt(storedHighScore, 10));\n    }\n  }, []);\n  const playSound = useCallback(sound => {\n    sound.currentTime = 0; // Reset the audio to the beginning\n    sound.play();\n  }, []);\n  const handleStartGame = async () => {\n    const {\n      totalRounds\n    } = await startGame();\n    setTotalRounds(totalRounds);\n    setGameStarted(true);\n    setScore(0);\n    fetchQuestion();\n  };\n  const fetchQuestion = async () => {\n    const data = await getQuestion();\n    setQuestionData(data);\n    setResult(null);\n  };\n  const handleAnswer = async answer => {\n    const response = await submitAnswer(answer);\n    setResult(response);\n    setScore(response.score);\n    if (response.isCorrect) {\n      playSound(correctSound);\n    } else {\n      playSound(incorrectSound);\n    }\n    if (response.gameOver) {\n      playSound(gameOverSound);\n      if (response.score > highScore) {\n        setHighScore(response.score);\n        localStorage.setItem('highScore', response.score.toString());\n      }\n    } else {\n      setTimeout(fetchQuestion, 2000);\n    }\n  };\n  const handlePlayAgain = () => {\n    setGameStarted(false);\n    setQuestionData(null);\n    setResult(null);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        minHeight: '100vh',\n        backgroundColor: 'primary.main',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundImage: 'url(\"/images/world-map-outline.svg\")',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: 'cover'\n      },\n      children: /*#__PURE__*/_jsxDEV(StyledContainer, {\n        maxWidth: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          align: \"center\",\n          color: \"primary\",\n          children: \"Geography Trivia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), gameStarted && /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: score / totalRounds * 100,\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), !gameStarted ? /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: [\"High Score: \", highScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: handleStartGame,\n            size: \"large\",\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            align: \"center\",\n            children: [\"Score: \", score, \" / \", totalRounds]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), questionData && !result && /*#__PURE__*/_jsxDEV(Question, {\n            data: questionData,\n            onAnswer: handleAnswer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), result && /*#__PURE__*/_jsxDEV(Result, {\n            result: result,\n            score: score,\n            totalRounds: totalRounds,\n            highScore: highScore,\n            onPlayAgain: handlePlayAgain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"wBm/SRJY0NkVErq5bCgEbmjXAp4=\");\n_c2 = Game;\nexport default Game;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ThemeProvider","createTheme","styled","Button","Typography","Box","Container","LinearProgress","startGame","getQuestion","submitAnswer","Question","Result","jsxDEV","_jsxDEV","Fragment","_Fragment","correctSound","Audio","incorrectSound","gameOverSound","theme","palette","primary","main","secondary","success","background","default","paper","typography","fontFamily","h4","fontWeight","h6","StyledContainer","backgroundColor","borderRadius","shape","padding","spacing","boxShadow","_c","Game","_s","gameStarted","setGameStarted","questionData","setQuestionData","result","setResult","score","setScore","totalRounds","setTotalRounds","highScore","setHighScore","storedHighScore","localStorage","getItem","parseInt","playSound","sound","currentTime","play","handleStartGame","fetchQuestion","data","handleAnswer","answer","response","isCorrect","gameOver","setItem","toString","setTimeout","handlePlayAgain","children","sx","minHeight","display","alignItems","justifyContent","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","maxWidth","variant","gutterBottom","align","color","fileName","_jsxFileName","lineNumber","columnNumber","value","mb","textAlign","onClick","size","onAnswer","onPlayAgain","_c2","$RefreshReg$"],"sources":["/Users/leozhao/ws/change++/geographygame/geography-trivia/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { ThemeProvider, createTheme, styled } from '@mui/material/styles';\nimport { Button, Typography, Box, Container, LinearProgress } from '@mui/material';\nimport { startGame, getQuestion, submitAnswer } from '../api';\nimport { QuestionData, AnswerResponse } from '../types';\nimport Question from './Question';\nimport Result from './Result';\n\n// Create audio objects for each sound\nconst correctSound = new Audio('/sounds/correct.mp3');\nconst incorrectSound = new Audio('/sounds/incorrect.mp3');\nconst gameOverSound = new Audio('/sounds/game-over.mp3');\n\n// Define a custom theme using Material-UI\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1E3D58', // Deep blue for primary elements\n    },\n    secondary: {\n      main: '#FFC300', // Soft yellow for buttons and highlights\n    },\n    success: {\n      main: '#43B929', // Green for correct answers\n    },\n    background: {\n      default: '#1E3D58', // Background color for the app\n      paper: '#FFFFFF', // Background color for cards\n    },\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    h4: {\n      fontFamily: '\"Montserrat\", sans-serif',\n      fontWeight: 700,\n    },\n    h6: {\n      fontFamily: '\"Montserrat\", sans-serif',\n      fontWeight: 600,\n    },\n  },\n});\n\n// Styled container for the main content\nconst StyledContainer = styled(Container)(({ theme }) => ({\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.shape.borderRadius,\n  padding: theme.spacing(3),\n  boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n}));\n\nconst Game: React.FC = () => {\n  const [gameStarted, setGameStarted] = useState(false);\n  const [questionData, setQuestionData] = useState<QuestionData | null>(null);\n  const [result, setResult] = useState<AnswerResponse | null>(null);\n  const [score, setScore] = useState(0);\n  const [totalRounds, setTotalRounds] = useState(5);\n  const [highScore, setHighScore] = useState(0);\n\n  useEffect(() => {\n    const storedHighScore = localStorage.getItem('highScore');\n    if (storedHighScore) {\n      setHighScore(parseInt(storedHighScore, 10));\n    }\n  }, []);\n\n  const playSound = useCallback((sound: HTMLAudioElement) => {\n    sound.currentTime = 0; // Reset the audio to the beginning\n    sound.play();\n  }, []);\n\n  const handleStartGame = async () => {\n    const { totalRounds } = await startGame();\n    setTotalRounds(totalRounds);\n    setGameStarted(true);\n    setScore(0);\n    fetchQuestion();\n  };\n\n  const fetchQuestion = async () => {\n    const data = await getQuestion();\n    setQuestionData(data);\n    setResult(null);\n  };\n\n  const handleAnswer = async (answer: string) => {\n    const response = await submitAnswer(answer);\n    setResult(response);\n    setScore(response.score);\n\n    if (response.isCorrect) {\n      playSound(correctSound);\n    } else {\n      playSound(incorrectSound);\n    }\n\n    if (response.gameOver) {\n      playSound(gameOverSound);\n      if (response.score > highScore) {\n        setHighScore(response.score);\n        localStorage.setItem('highScore', response.score.toString());\n      }\n    } else {\n      setTimeout(fetchQuestion, 2000);\n    }\n  };\n\n  const handlePlayAgain = () => {\n    setGameStarted(false);\n    setQuestionData(null);\n    setResult(null);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box \n        sx={{ \n          minHeight: '100vh', \n          backgroundColor: 'primary.main',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundImage: 'url(\"/images/world-map-outline.svg\")',\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n        }}\n      >\n        <StyledContainer maxWidth=\"sm\">\n          <Typography variant=\"h4\" gutterBottom align=\"center\" color=\"primary\">\n            Geography Trivia\n          </Typography>\n          {gameStarted && (\n            <LinearProgress \n              variant=\"determinate\" \n              value={(score / totalRounds) * 100} \n              sx={{ mb: 2 }}\n            />\n          )}\n          {!gameStarted ? (\n            <Box textAlign=\"center\">\n              <Typography variant=\"h6\" gutterBottom>\n                High Score: {highScore}\n              </Typography>\n              <Button \n                variant=\"contained\" \n                color=\"secondary\" \n                onClick={handleStartGame}\n                size=\"large\"\n              >\n                Start Game\n              </Button>\n            </Box>\n          ) : (\n            <>\n              <Typography variant=\"h6\" gutterBottom align=\"center\">\n                Score: {score} / {totalRounds}\n              </Typography>\n              {questionData && !result && (\n                <Question data={questionData} onAnswer={handleAnswer} />\n              )}\n              {result && (\n                <Result\n                  result={result}\n                  score={score}\n                  totalRounds={totalRounds}\n                  highScore={highScore}\n                  onPlayAgain={handlePlayAgain}\n                />\n              )}\n            </>\n          )}\n        </StyledContainer>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}